#Leetcode 54. Spiral Matrix (Amazon Staple Question)

Given a matrix of m x n elements (m rows, n columns), return all elements of the matrix in spiral order.

Example 1:

Input:
[
 [ 1, 2, 3 ],
 [ 4, 5, 6 ],
 [ 7, 8, 9 ]
]
Output: [1,2,3,6,9,8,7,4,5]
Example 2:

Input:
[
  [1, 2, 3, 4],
  [5, 6, 7, 8],
  [9,10,11,12]
]
Output: [1,2,3,4,8,12,11,10,9,5,6,7]


#Solution Added
class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        vector<int> result;
        if(matrix.size()==0)    return {};
        int rstart=0, cstart=0, rend=matrix.size()-1, cend=matrix[0].size()-1;
        
        
        while(rstart<=rend && cstart<=cend){
            //first row, last col
            for(int c=cstart;c<=cend;c++)     result.push_back(matrix[rstart][c]);
            for(int r=rstart+1;r<=rend;r++)     result.push_back(matrix[r][cend]);
            
            // the inner elements
            if(rstart<rend && cstart<cend)
            {
                for(int c=cend-1;c>cstart;c--)  result.push_back(matrix[rend][c]);
                for(int r=rend;r>rstart;r--)  result.push_back(matrix[r][cstart]);
            }
            rstart++;
            rend--;
            cstart++;
            cend--;
        }
    return result;
    }
};
